{"version":3,"sources":["CaptureImageComponent.js"],"names":["CryptUtil","require","cc","Class","extends","Component","properties","captureContainerNode","Node","coverNode","capturedImageName","prefixName","captureImage","imageCachePath","completeCallback","CC_JSB","whiteBg","active","fakePicBg","folderPath","jsb","fileUtils","getWritablePath","isDirectoryExist","createDirectory","renderTexture","RenderTexture","create","width","height","Texture2D","PIXEL_FORMAT_RGBA8888","gl","DEPTH24_STENCIL8_OES","setVisible","director","getScene","_sgNode","addChild","x","winSize","y","begin","visit","end","currentTimeStamp","ss","dateUtil","encodeImageName","md5Encode","console","log","saveToFile","ImageFormat","JPG","rt","str","getNativeImagePathByPlatform","platform","imagePath","sys","OS_ANDROID","OS_IOS","idx","lastIndexOf","imageName","substr","length","GlobalConst","IMAGE_CACHE_PATH"],"mappings":";;;;;;AAAA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,8BAAuBL,GAAGM,IADlB;AAERC,mBAAYP,GAAGM,IAFP;AAGRE,2BAAoB,EAHZ;AAIRC,oBAAY;AAJJ,KAHP;;AAUL;;;;;AAKAC,gBAfK,wBAeQC,cAfR,EAewBC,gBAfxB,EAgBL;AACI,YAAG,CAACC,MAAJ,EAAW;AACX,YAAIC,UAAU,KAAKP,SAAnB;AACAO,gBAAQC,MAAR,GAAiB,IAAjB;;AAEA,YAAIC,YAAY,KAAKX,oBAArB;AACAW,kBAAUD,MAAV,GAAmB,IAAnB;;AAEA,YAAIE,aAAaC,IAAIC,SAAJ,CAAcC,eAAd,KAAkCT,cAAnD;AACA,YAAG,CAACO,IAAIC,SAAJ,CAAcE,gBAAd,CAA+BJ,UAA/B,CAAJ,EAAgDC,IAAIC,SAAJ,CAAcG,eAAd,CAA8BL,UAA9B;;AAEhD;AACA,YAAIM,gBAAgBvB,GAAGwB,aAAH,CAAiBC,MAAjB,CAAwBT,UAAUU,KAAlC,EAAyCV,UAAUW,MAAnD,EAA0D3B,GAAG4B,SAAH,CAAaC,qBAAvE,EAA8FC,GAAGC,oBAAjG,CAApB;AACAR,sBAAcS,UAAd,CAAyB,KAAzB;AACAhC,WAAGiC,QAAH,CAAYC,QAAZ,GAAuBC,OAAvB,CAA+BC,QAA/B,CAAwCb,aAAxC;;AAEAP,kBAAUqB,CAAV,GAAc,CAACrC,GAAGsC,OAAH,CAAWZ,KAAZ,GAAoB,CAApB,GAAwBV,UAAUU,KAAV,GAAkB,CAAxD;AACAV,kBAAUuB,CAAV,GAAc,CAACvC,GAAGsC,OAAH,CAAWX,MAAZ,GAAqB,CAArB,GAAyBX,UAAUW,MAAV,GAAmB,CAA1D;;AAEA;AACAJ,sBAAciB,KAAd;AACAxC,WAAGiC,QAAH,CAAYC,QAAZ,GAAuBC,OAAvB,CAA+BM,KAA/B,GArBJ,CAqB2C;AACvClB,sBAAcmB,GAAd;;AAEA,YAAIC,mBAAmB3C,GAAG4C,EAAH,CAAMC,QAAN,CAAeF,gBAAf,EAAvB;AACA,YAAIG,uBAAqBH,gBAArB,GAAwC,KAAKlC,UAA7C,GAA0D,KAAKD,iBAAnE;AACAsC,0BAAkBhD,UAAUiD,SAAV,CAAoBD,eAApB,IAAuC,MAAzD;AACAE,gBAAQC,GAAR,sDAA2CH,eAA3C;;AAEAvB,sBAAc2B,UAAd,CAAyBvC,iBAAiBmC,eAA1C,EAA2D9C,GAAGmD,WAAH,CAAeC,GAA1E,EAA+E,IAA/E,EAAqF,UAACC,EAAD,EAAKC,GAAL,EAAa;AAAE,gBAAI1C,gBAAJ,EAAsBA,iBAAiB0C,GAAjB;AAAwB,SAAlJ;;AAEAtC,kBAAUD,MAAV,GAAmB,KAAnB;AACAD,gBAAQC,MAAR,GAAiB,KAAjB;AACH,KAjDI;;;AAmDL;;;;;;;AAOAwC,gCA1DK,wCA0DwBC,QA1DxB,EA0DkCC,SA1DlC,EA2DL;AACI,YAAID,aAAaxD,GAAG0D,GAAH,CAAOC,UAAxB,EACI,OAAOF,SAAP;;AAEJ,YAAID,aAAaxD,GAAG0D,GAAH,CAAOE,MAAxB,EAAgC;AAC5B,gBAAIC,MAAMJ,UAAUK,WAAV,CAAsB,GAAtB,CAAV;AACA,gBAAID,MAAM,CAAV,EAAa;AACT,oBAAIE,YAAYN,UAAUO,MAAV,CAAiBH,MAAM,CAAvB,EAA0BJ,UAAUQ,MAApC,CAAhB;AACA,uBAAOjE,GAAG4C,EAAH,CAAMsB,WAAN,CAAkBC,gBAAlB,GAAqCJ,SAA5C;AACH;AACD,mBAAO/D,GAAG4C,EAAH,CAAMsB,WAAN,CAAkBC,gBAAlB,GAAsCV,SAA7C;AACH;;AAED,eAAO,EAAP;AACH;AAzEI,CAAT","file":"CaptureImageComponent.js","sourceRoot":"../../../../../../../../assets/scripts/GameModule/Base/Module/Components","sourcesContent":["const CryptUtil = require('CryptUtil');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        captureContainerNode : cc.Node,\n        coverNode : cc.Node,\n        capturedImageName : \"\",\n        prefixName: \"\"\n    },\n\n    /**\n     * 截图\n     * @param imageCachePath 图片存储路径\n     * @param completeCallback 完成回调\n     */\n    captureImage(imageCachePath ,completeCallback)\n    {\n        if(!CC_JSB)return;\n        let whiteBg = this.coverNode;\n        whiteBg.active = true;\n\n        let fakePicBg = this.captureContainerNode;\n        fakePicBg.active = true;\n\n        let folderPath = jsb.fileUtils.getWritablePath() + imageCachePath;\n        if(!jsb.fileUtils.isDirectoryExist(folderPath)) jsb.fileUtils.createDirectory(folderPath);\n\n        // 创建 renderTexture\n        let renderTexture = cc.RenderTexture.create(fakePicBg.width, fakePicBg.height,cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);\n        renderTexture.setVisible(false);\n        cc.director.getScene()._sgNode.addChild(renderTexture);\n\n        fakePicBg.x = -cc.winSize.width / 2 + fakePicBg.width / 2;\n        fakePicBg.y = -cc.winSize.height / 2 + fakePicBg.height / 2;\n\n        //实际截屏的代码\n        renderTexture.begin();\n        cc.director.getScene()._sgNode.visit();//好用\n        renderTexture.end();\n\n        let currentTimeStamp = cc.ss.dateUtil.currentTimeStamp();\n        let encodeImageName = `${currentTimeStamp}${this.prefixName}${this.capturedImageName}`;\n        encodeImageName = CryptUtil.md5Encode(encodeImageName) + \".jpg\";\n        console.log(`[CaptureImageComponent]新图片名:${encodeImageName}`);\n\n        renderTexture.saveToFile(imageCachePath + encodeImageName, cc.ImageFormat.JPG, true, (rt, str) => { if (completeCallback) completeCallback(str); });\n\n        fakePicBg.active = false;\n        whiteBg.active = false;\n    },\n\n    /**\n     * 根据不同平台获取到的\n     * @param platform\n     * @param imagePath\n     * @returns {*}\n     * @private\n     */\n    getNativeImagePathByPlatform(platform, imagePath)\n    {\n        if (platform === cc.sys.OS_ANDROID)\n            return imagePath;\n\n        if (platform === cc.sys.OS_IOS) {\n            let idx = imagePath.lastIndexOf('/');\n            if (idx > 0) {\n                let imageName = imagePath.substr(idx + 1, imagePath.length);\n                return cc.ss.GlobalConst.IMAGE_CACHE_PATH + imageName;\n            }\n            return cc.ss.GlobalConst.IMAGE_CACHE_PATH  + imagePath;\n        }\n\n        return \"\";\n    },\n\n});\n"]}