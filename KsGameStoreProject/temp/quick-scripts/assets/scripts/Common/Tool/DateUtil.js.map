{"version":3,"sources":["DateUtil.js"],"names":["DateUtil","fmt","date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","theDate","Date","today","getTime","yestday","str","d","todaysDate","setHours","toDateString","newDate","valueOf","module","exports"],"mappings":"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","file":"DateUtil.js","sourceRoot":"../../../../../../assets/scripts/Common/Tool","sourcesContent":["class DateUtil\n{\n\n\n    dateFormat(fmt,date)\n    {\n        let o = {\n            \"M+\" : date.getMonth()+1,                 //月份\n            \"d+\" : date.getDate(),                    //日\n            \"h+\" : date.getHours(),                   //小时\n            \"m+\" : date.getMinutes(),                 //分\n            \"s+\" : date.getSeconds(),                 //秒\n            \"q+\" : Math.floor((date.getMonth()+3)/3), //季度\n            \"S\"  : date.getMilliseconds()             //毫秒\n             };\n        if(/(y+)/.test(fmt)) fmt=fmt.replace(RegExp.$1, (date.getFullYear()+\"\").substr(4 - RegExp.$1.length));\n\n        for(let k in o)\n            if(new RegExp(\"(\"+ k +\")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length===1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n\n            return fmt;\n    }\n\n\n\n    /**\n     * 是否是昨天\n     * @param theDate\n     * @returns {boolean}\n     */\n    isYestday(theDate) {\n        let date = (new Date());    //当前时间\n        let today = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime(); //今天凌晨\n        let yestday = new Date(today - 24*3600*1000).getTime();\n        return theDate.getTime() < today && yestday <= theDate.getTime();\n    }\n\n    /**\n     * 是否是今天\n     * @param str\n     * @returns {boolean}\n     */\n    isToday(str) {\n        let d = new Date(str.replace(/-/g,\"/\"));\n        let todaysDate = new Date();\n        return d.setHours(0,0,0,0) === todaysDate.setHours(0,0,0,0);\n    }\n\n    /**\n     * 今天数字值\n     */\n    todayValue() {\n        let date = (new Date());    //当前时间\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime(); //今天凌晨\n    }\n\n    /**\n     * 今天数字值\n     */\n    todayDate() {\n        let date = new Date();\n        return date.toDateString();\n    }\n\n    isInToday(str) {\n        let d = new Date(str);\n        let newDate = new Date();\n\n        return d.toDateString() === newDate.toDateString();\n    }\n\n    /**\n     * 当前时间戳\n     * @returns {Object}\n     */\n    currentTimeStamp() {\n        return  new Date().valueOf();\n    }\n    \n}//end class\n\nmodule.exports = DateUtil;\n\n"]}