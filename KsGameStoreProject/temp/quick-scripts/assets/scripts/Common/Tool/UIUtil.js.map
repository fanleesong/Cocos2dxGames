{"version":3,"sources":["UIUtil.js"],"names":["DialogMgr","require","UIUtil","node","target","component","handler","eventHandler","cc","Component","EventHandler","clickEvents","getComponent","Button","push","container","path","loader","loadRes","SpriteFrame","err","spFrame","spriteFrame","root","name","getChildByName","find","notOkCallback","isOkCallback","appVersion","ss","userInfoCache","APP_TOTAL_VERSION_NUM","APP_CHILD_VERSION_NUM","undefined","showInfoDialog","GlobalConst","SHOW_TIPS_CHECKUPDATE","versionArr","split","log","length","x","y","width","height","winWidth","winSize","winHeight","targetRect","Rect","winRect","rectOverlapsRect","director","getWinSize","ratio","designWith","designHeight","resolutionPolicy","view","getResolutionPolicy","ResolutionPolicy","FIXED_HEIGHT","visibleSizeWidth","getVisibleSizeInPixel","FIXED_WIDTH","visibleSizeHeight","dividedResult","pointValue","parseInt","Math","pow","module","exports"],"mappings":"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","file":"UIUtil.js","sourceRoot":"../../../../../../assets/scripts/Common/Tool","sourcesContent":["const DialogMgr = require(\"DialogMgr\");\nclass UIUtil {\n    /**\n     * 绑定点击事件\n     * @param node\n     * @param target\n     * @param component\n     * @param handler\n     */\n    addClickEvent(node, target, component, handler) {\n        //生成EventHandler\n        let eventHandler = new cc.Component.EventHandler();\n        eventHandler.target = target;\n        eventHandler.component = component;\n        eventHandler.handler = handler;\n\n        //为Button绑定点击事件\n        let clickEvents = node.getComponent(cc.Button).clickEvents;\n        clickEvents.push(eventHandler);\n    }\n\n    /**\n     * 动态切换图片 -- PS:必须图片路径在resource下\n     * @param container\n     * @param path\n     */\n    addSpriteFramePic(container, path) {\n        cc.loader.loadRes(path, cc.SpriteFrame, function (err, spFrame) {\n            container.spriteFrame = spFrame\n        });\n    }\n\n    findNodeByName(root, name) {\n        return root.getChildByName(name);\n    }\n\n    /**\n     * 根据节点路径返回节点\n     * @param root 根节点\n     * @param path 子节点路径\n     * @returns {Node}\n     */\n    findNodeByPathName(root, path) {\n        return cc.find(path, root);\n    }\n\n    /**\n     * 检测版本\n     * @param notOkcallback 版本低于4.8时 点击按钮需要进行的操作<注：此时 isOKCallback可不填或者填null>\n     * @param isOkCallback 只有满足要求时 才会调用\n     */\n    checkVersionGoUpdate(notOkCallback = null, isOkCallback = null) {\n\n        let appVersion = cc.ss.userInfoCache.appVersion;\n        let APP_TOTAL_VERSION_NUM = 4;//此处以后需要修改\n        let APP_CHILD_VERSION_NUM = 8;//此处以后需要修改\n\n        if (appVersion === undefined || appVersion === null || appVersion === \"\") {\n\n            DialogMgr.showInfoDialog(null, cc.ss.GlobalConst.SHOW_TIPS_CHECKUPDATE, notOkCallback);\n\n        } else {\n\n            let versionArr = appVersion.split(\".\");\n            cc.log(\"[UIUtil] ==版本号  \" + appVersion + \"  versionArr.length  ==> \" + versionArr.length);\n            if (versionArr.length >= 3) {\n                if (versionArr[0] >= APP_TOTAL_VERSION_NUM && versionArr[1] >= APP_CHILD_VERSION_NUM) {\n\n                    if(isOkCallback !== undefined || isOkCallback !== null) isOkCallback();\n\n                } else {\n                    cc.log(\"[UIUtil]--->checkVersionGoUpdate == 版本不对>需要更新\");\n                    DialogMgr.showInfoDialog(null, cc.ss.GlobalConst.SHOW_TIPS_CHECKUPDATE, notOkCallback);\n                }\n\n            } else {\n                DialogMgr.showInfoDialog(null, cc.ss.GlobalConst.SHOW_TIPS_CHECKUPDATE, notOkCallback);\n            }\n        }\n\n    }\n\n    /**\n     * 完全在屏幕范围内\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     * @returns {boolean}\n     */\n    isBoxInScreen(x, y, width, height){\n       let winWidth = cc.winSize.width;\n       let winHeight = cc.winSize.height;\n\n       let targetRect = new cc.Rect(x -  width / 2,y - height / 2, winWidth, height);\n       let winRect = new cc.Rect(-winWidth / 2, -winHeight / 2, winWidth, winHeight);\n\n       return cc.rectOverlapsRect(targetRect, winRect);\n    }\n\n\n    /**\n     * 是否为全面屏\n     * @returns {boolean}\n     */\n    isIphoneXsOrAllScreen() {\n\n        let winSize = cc.director.getWinSize();\n        let ratio = winSize.height / winSize.width;\n        if (ratio > 2 || ratio >= 1.97) {\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    /**\n     * 获取地图的\n     */\n    getScreenScaleRatio() {\n\n        let designWith = 750;\n        let designHeight = 1334;\n        let resolutionPolicy = cc.view.getResolutionPolicy();\n\n        if (resolutionPolicy === cc.ResolutionPolicy.FIXED_HEIGHT) {\n            let visibleSizeWidth = cc.view.getVisibleSizeInPixel().width;\n            let ratio = (visibleSizeWidth > designWith) ? (visibleSizeWidth / designWith) : (designWith / visibleSizeWidth);\n            // console.log(\"[UiUtil]------->visibleSizeWidth:\" + visibleSizeWidth + \" ratio:\" + ratio);\n            // return this.mathDividedFloat(ratio,3);\n            return ratio;\n        } else if (resolutionPolicy === cc.ResolutionPolicy.FIXED_WIDTH) {\n            let visibleSizeHeight = cc.view.getVisibleSizeInPixel().height;\n            let ratio = (visibleSizeHeight > designHeight) ? (visibleSizeHeight / designHeight) : (designHeight / visibleSizeHeight);\n            // console.log(\"[UiUtil]------->visibleSizeHeight:\" + visibleSizeHeight + \" ratio:\" + ratio);\n            // return this.mathDividedFloat(ratio,3);\n            return ratio;\n        }\n\n        return 1;\n\n    }\n\n    /**\n     * 获取小数点后n位\n     * @param dividedResult  eg: [100/9]\n     * @param pointValue 保留几位小数点\n     * @returns {number}\n     */\n    mathDividedFloat(dividedResult, pointValue){\n\n        return parseInt(dividedResult * Math.pow(10, pointValue) + 0.5, 10) / Math.pow(10, pointValue);\n\n    }\n\n    getAndroidTopBarHeight (){\n        return 40;//安卓状态栏高度25\n    }\n\n}\n\nmodule.exports = UIUtil;\n"]}