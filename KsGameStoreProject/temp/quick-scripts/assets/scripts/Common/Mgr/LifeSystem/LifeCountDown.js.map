{"version":3,"sources":["LifeCountDown.js"],"names":["Working_State","cc","Enum","Running","Stopped","Pause","Invalid","COUNT_DOWN_PER_SEC","LifeCountDown","_countDownTimeCallback","_countDownOneRoundCompleteCallback","_maxSecs","_countDownTimer","_workingState","call","secs","maxSecs","_runLoop","setInterval","console","log","timer","_notifyCountDownTime","module","exports"],"mappings":";;;;;;;;;;AAAA;;;;AAIA,IAAMA,gBAAgBC,GAAGC,IAAH,CAAQ;AAC1BC,aAAU,CADgB;AAE1BC,aAAU,CAFgB;AAG1BC,WAAQ,CAHkB,EAGhB;AACVC,aAAU;AAJgB,CAAR,CAAtB;;AAOA,IAAMC,qBAAqB,IAA3B;;IAEMC;AACF,6BAAc;AAAA;;AACV,aAAKC,sBAAL,GAA8B,IAA9B;AACA,aAAKC,kCAAL,GAA0C,IAA1C;;AAEA,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,eAAL,GAAuB,CAAvB;AACA,aAAKC,aAAL,GAAqBb,cAAcM,OAAnC;AACH;;AAED;;;;;;;;iDAIyBQ,MAAM;AAAE,iBAAKL,sBAAL,GAA8BK,IAA9B;AAAqC;;AAEtE;;;;;;;6DAIqCA,MAAM;AAAE,iBAAKJ,kCAAL,GAA0CI,IAA1C;AAAiD;;AAE9F;;;;;;;;6CAKqBC,MAAM;AAAE,gBAAI,KAAKN,sBAAT,EAAiC,KAAKA,sBAAL,CAA4BM,IAA5B;AAAoC;;AAElG;;;;;;;iCAISC,SAAS;AACd,iBAAKL,QAAL,GAAgBK,OAAhB;AACA,iBAAKJ,eAAL,GAAuBI,OAAvB;;AAEA,iBAAKC,QAAL,GAJc,CAIE;AACnB;;;mCAGD;AAAA;;AACIC,wBAAY,YAAM;AACd,oBAAI,MAAKL,aAAL,KAAuBb,cAAcK,KAAzC,EAA+C;AAC3Cc,4BAAQC,GAAR,CAAY,MAAZ;AACH;AACD,oBAAI,MAAKP,aAAL,KAAuBb,cAAcG,OAAzC,EAAkD,OAJpC,CAI4C;;AAE1D,oBAAIkB,QAAQ,MAAKT,eAAjB;AACAS,yBAASd,kBAAT;AACA,sBAAKe,oBAAL,CAA0BD,KAA1B;;AAEA;AACA,oBAAIA,SAAS,CAAb,EAAiB;AACbA,4BAAQ,MAAKV,QAAb;AACA,wBAAI,MAAKD,kCAAT,EAA4C,MAAKA,kCAAL;AAC/C;AACD,sBAAKE,eAAL,GAAuBS,KAAvB;AACH,aAhBD,EAgBGd,kBAhBH;AAiBH;;;gCAID;AACI,gBAAI,KAAKM,aAAL,KAAuBb,cAAcG,OAArC,IAAgD,KAAKU,aAAL,KAAuBb,cAAcK,KAAzF,EAAgG;AAChG,iBAAKQ,aAAL,GAAqBb,cAAcG,OAAnC;AACH;;;+BAGD;AACI,iBAAKU,aAAL,GAAqBb,cAAcI,OAAnC;AACA,iBAAKQ,eAAL,GAAuB,KAAKD,QAA5B;AACH;;;kDAEyB;AAAE,mBAAO,KAAKC,eAAZ;AAA8B;;;oCAE9C;AAAE,mBAAO,KAAKC,aAAL,KAAuBb,cAAcG,OAArC,IAAgD,KAAKU,aAAL,KAAuBb,cAAcK,KAA5F;AAAoG;;;gCAGlH;AACI,gBAAI,KAAKQ,aAAL,KAAuBb,cAAcG,OAAzC,EAAkD,KAAKU,aAAL,GAAqBb,cAAcK,KAAnC;AACrD;;;iCAGD;AACI,gBAAI,KAAKQ,aAAL,KAAuBb,cAAcK,KAAzC,EAAgD,KAAKQ,aAAL,GAAqBb,cAAcG,OAAnC;AACnD;;;;KAEJ;;AAEDoB,OAAOC,OAAP,GAAiBhB,aAAjB","file":"LifeCountDown.js","sourceRoot":"../../../../../../../assets/scripts/Common/Mgr/LifeSystem","sourcesContent":["/**\n * 生命倒计时工具\n */\n\nconst Working_State = cc.Enum({\n    Running : 0,\n    Stopped : 1,\n    Pause : 2,// 暂停中\n    Invalid : 3,\n});\n\nconst COUNT_DOWN_PER_SEC = 1000;\n\nclass LifeCountDown {\n    constructor() {\n        this._countDownTimeCallback = null;\n        this._countDownOneRoundCompleteCallback = null;\n\n        this._maxSecs = 0;\n        this._countDownTimer = 0;\n        this._workingState = Working_State.Invalid;\n    }\n\n    /**\n     * 倒计时回调\n     * @param call\n     */\n    setCountDownTimeCallback(call) { this._countDownTimeCallback = call; }\n\n    /**\n     * 倒计时一轮循环后的回调\n     * @param call\n     */\n    setCountDownOneRoundCompleteCallback(call) { this._countDownOneRoundCompleteCallback = call; }\n\n    /**\n     * 通知倒计时时间\n     * @param secs\n     * @private\n     */\n    _notifyCountDownTime(secs) { if (this._countDownTimeCallback) this._countDownTimeCallback(secs); }\n\n    /**\n     * 初始化\n     * @param maxSecs 最大倒计时秒数\n     */\n    lazyInit(maxSecs) {\n        this._maxSecs = maxSecs;\n        this._countDownTimer = maxSecs;\n\n        this._runLoop();//开始倒计时服务器\n    }\n\n    _runLoop()\n    {\n        setInterval(() => {\n            if (this._workingState === Working_State.Pause){\n                console.log('暂停状态');\n            }\n            if (this._workingState !== Working_State.Running) return; //停止状态中\n\n            let timer = this._countDownTimer;\n            timer -= COUNT_DOWN_PER_SEC;\n            this._notifyCountDownTime(timer);\n\n            //完成一个倒计时循环\n            if (timer <= 0 ) {\n                timer = this._maxSecs;\n                if (this._countDownOneRoundCompleteCallback)this._countDownOneRoundCompleteCallback();\n            }\n            this._countDownTimer = timer;\n        }, COUNT_DOWN_PER_SEC);\n    }\n\n\n    start()\n    {\n        if (this._workingState === Working_State.Running || this._workingState === Working_State.Pause) return;\n        this._workingState = Working_State.Running;\n    }\n\n    stop()\n    {\n        this._workingState = Working_State.Stopped;\n        this._countDownTimer = this._maxSecs;\n    }\n\n    getCurrentCountDownSecs() { return this._countDownTimer; }\n\n    isWorking() { return this._workingState === Working_State.Running || this._workingState === Working_State.Pause; }\n\n    pasue()\n    {\n        if (this._workingState === Working_State.Running) this._workingState = Working_State.Pause;\n    }\n\n    resume()\n    {\n        if (this._workingState === Working_State.Pause) this._workingState = Working_State.Running;\n    }\n\n}//end class\n\nmodule.exports = LifeCountDown;"]}