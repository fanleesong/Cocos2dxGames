{"version":3,"sources":["Facade.js"],"names":["Model","require","Med","Notification","Facade","_model","_controller","_med","getModel","getMed","notificationName","body","type","notification","lazyInit","notifyObservers","controller","registerController","removeController","getControllerName","proxyInstance","registerProxy","proxyName","removeProxy","getProxy","_instance","undefined","console","log","module","exports"],"mappings":";;;;;;;;;;AAAA;;;;;;AAMA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,eAAeF,QAAQ,cAAR,CAArB;;IAEMG;AAEF,sBACA;AAAA;;AACI,aAAKC,MAAL,GAAc,IAAd;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACA,aAAKC,IAAL,GAAY,IAAZ;AACH;;;;;;AAaD;mCAEA;AACI,iBAAKF,MAAL,GAAcL,MAAMQ,QAAN,EAAd;AACA,iBAAKD,IAAL,GAAYL,IAAIO,MAAJ,EAAZ;AACH;;AAED;;;;yCACiBC,kBAAkBC,MAAMC,MACzC;AACI,gBAAIC,eAAe,IAAIV,YAAJ,EAAnB;AACAU,yBAAaC,QAAb,CAAsBJ,gBAAtB,EAAwCC,IAAxC,EAA8CC,IAA9C;AACA,iBAAKL,IAAL,CAAUQ,eAAV,CAA0BF,YAA1B;AACH;;AAED;;;;2CACmBG,YACnB;AACI,iBAAKT,IAAL,CAAUU,kBAAV,CAA6BD,UAA7B;AACH;AACD;;;;yCACiBA,YACjB;AACI,iBAAKT,IAAL,CAAUW,gBAAV,CAA2BF,WAAWG,iBAAX,EAA3B;AACH;;AAED;;;;sCACcC,eACd;AACI,iBAAKf,MAAL,CAAYgB,aAAZ,CAA0BD,aAA1B;AACH;;AAED;;;;oCACYE,WACZ;AACI,iBAAKjB,MAAL,CAAYkB,WAAZ,CAAwBD,SAAxB;AACH;;AAED;;;;iCACSA,WACT;AACI,mBAAO,KAAKjB,MAAL,CAAYmB,QAAZ,CAAqBF,SAArB,CAAP;AACH;;;oCApDD;AACI,gBAAI,KAAKG,SAAL,KAAmB,IAAnB,IAA2B,KAAKA,SAAL,KAAmBC,SAAlD,EACA;AACIC,wBAAQC,GAAR,CAAY,uBAAZ;AACD,qBAAKH,SAAL,GAAiB,IAAIrB,MAAJ,EAAjB;AACA,qBAAKqB,SAAL,CAAeX,QAAf;AACF;AACF,mBAAO,KAAKW,SAAZ;AACF;;;;;;AAiDLI,OAAOC,OAAP,GAAiB1B,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Facade.js","sourceRoot":"../../../../../../../../assets/scripts/Common/Framework/SimpleMVC/Core","sourcesContent":["/**\n  @author : shilong\n  @time: 2017-07-24\n  @description: Facade SimpleMVC入口\n**/\n\nconst Model = require(\"Model\");\nconst Med = require(\"Med\");\nconst Notification = require(\"Notification\");\n\nclass Facade\n{\n    constructor()\n    {\n        this._model = null;\n        this._controller = null;\n        this._med = null;\n    }\n\n    static getFacade()\n    {\n        if (this._instance === null || this._instance === undefined)\n        {\n            console.log('[Facade]初始化Facade静态实例');\n           this._instance = new Facade();\n           this._instance.lazyInit();\n        }\n       return this._instance;\n    }\n\n    //延迟初始化\n    lazyInit()\n    {\n        this._model = Model.getModel();\n        this._med = Med.getMed();\n    }\n\n    //发送消息\n    sendNotification(notificationName, body, type)\n    {\n        let notification = new Notification();\n        notification.lazyInit(notificationName, body, type);\n        this._med.notifyObservers(notification);\n    }\n\n    //注册Controller\n    registerController(controller)\n    {\n        this._med.registerController(controller);\n    }\n    //移除Controller\n    removeController(controller)\n    {\n        this._med.removeController(controller.getControllerName());\n    }\n    \n    //注册Model - Proxy\n    registerProxy(proxyInstance)\n    {\n        this._model.registerProxy(proxyInstance);\n    }\n\n    //移除Model - Proxy\n    removeProxy(proxyName)\n    {\n        this._model.removeProxy(proxyName);\n    }\n    \n    //获取proxy\n    getProxy(proxyName)\n    {\n        return this._model.getProxy(proxyName);\n    }\n\n\n}\n\nmodule.exports = Facade;\n//\n// /**\n//   Facade类\n// **/\n// var Facade = cc.Class({\n//\n//     properties: {\n//         _model : null,\n//         _controller : null,\n//         _med : null,\n//     },\n//\n//     statics : {\n//         _instance :null,\n//\n//         getFacade : function() {\n//             if (this._instance == null) {\n//                 this._instance = new Facade();\n//                 this._instance.lazyInit();\n//             }\n//             return this._instance;\n//         },\n//\n//     },\n//\n//     //延迟初始化\n//     lazyInit :function () {\n//       this._model = Model.getModel();\n//       this._med = Med.getMed();\n//     },\n//\n//     //发送消息\n//     sendNotification : function(notificationName, body, type) {\n//       if (this._med != null) {\n//         // console.log(\"Facade - 发送消息\");\n//         var notification = new Notification();\n//         notification.lazyInit(notificationName, body, type);\n//         this._med.notifyObservers(notification);\n//       }\n//     },\n//\n//     //注册Controller\n//     registerController :function(controller) {\n//       if (this._med != null) {\n//           this._med.registerController(controller);\n//       }\n//\n//     },\n//\n//     //移除Controller\n//     removeController : function(controller) {\n//       if (this._med != null) {\n//           this._med.removeController(controller.getControllerName());\n//       }\n//     },\n//\n//\n//     //注册Model - Proxy\n//     registerProxy : function(proxyInstance) {\n//       if (this._model != null) {\n//           this._model.registerProxy(proxyInstance);\n//       }\n//     },\n//\n//     //移除Model - Proxy\n//     removeProxy : function(proxyName){\n//       if (this._model != null) {\n//           this._model.removeProxy(proxyName);\n//       }\n//     },\n//\n//     //获取proxy\n//     getProxy : function(proxyName){\n//         return this._model.getProxy(proxyName);\n//     },\n// });\n"]}