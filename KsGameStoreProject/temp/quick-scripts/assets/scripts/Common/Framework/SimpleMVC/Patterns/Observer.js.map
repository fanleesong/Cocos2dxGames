{"version":3,"sources":["Observer.js"],"names":["Observer","_notifyMethod","_notifyContext","notifyMethod","notifyContext","notification","getNotifyMethod","call","getNotifyContext","obj","module","exports"],"mappings":";;;;;;;;;;AAAA;;;;;IAKMA;AAEF,wBACA;AAAA;;AACI,aAAKC,aAAL,GAAqB,IAArB,CADJ,CAC+B;AAC3B,aAAKC,cAAL,GAAsB,IAAtB,CAFJ,CAEgC;AAC/B;;;;iCAEQC,cAAcC,eAAe;AAClC,iBAAKH,aAAL,GAAqBE,YAArB;AACA,iBAAKD,cAAL,GAAsBE,aAAtB;AACH;;;0CAEiB;AACd,mBAAO,KAAKH,aAAZ;AACH;;;2CAEkB;AACf,mBAAO,KAAKC,cAAZ;AACH;;AAED;;;;uCACeG,cAAc;AACzB,iBAAKC,eAAL,GAAuBC,IAAvB,CAA4B,KAAKC,gBAAL,EAA5B,EAAqDH,YAArD;AACH;;AAED;;;;6CACqBI,KAAK;AACtB,mBAAOA,QAAQ,KAAKP,cAApB;AACH;;;;KACJ;;AAEDQ,OAAOC,OAAP,GAAiBX,QAAjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Observer.js","sourceRoot":"../../../../../../../../assets/scripts/Common/Framework/SimpleMVC/Patterns","sourcesContent":["/**\n  @author : shilong\n  @time: 2017-07-24\n  @description: 观察者类\n**/\nclass Observer\n{\n    constructor()\n    {\n        this._notifyMethod = null; // 回调方法\n        this._notifyContext = null; //回调上下文\n    }\n\n    lazyInit(notifyMethod, notifyContext) {\n        this._notifyMethod = notifyMethod;\n        this._notifyContext = notifyContext;\n    }\n\n    getNotifyMethod() {\n        return this._notifyMethod;\n    }\n\n    getNotifyContext() {\n        return this._notifyContext;\n    }\n\n    //调用回调方法并传入notification对象\n    notifyObserver(notification) {\n        this.getNotifyMethod().call(this.getNotifyContext(), notification);\n    }\n\n    //比较\n    compareNotifyContext(obj) {\n        return obj === this._notifyContext;\n    }\n}//end class\n\nmodule.exports = Observer;\n\n//\n// cc.Class({\n//     properties: {\n//         _notifyMethod : null, // 回调方法\n//         _notifyContext : null //回调上下文\n//     },\n//\n//     // use this for initialization\n//     onLoad: function () {\n//\n//     },\n//\n//     lazyInit : function(notifyMethod, notifyContext) {\n//       this._notifyMethod = notifyMethod;\n//       this._notifyContext = notifyContext;\n//     },\n//\n//     getNotifyMethod : function() {\n//       return this._notifyMethod;\n//     },\n//\n//     getNotifyContext : function() {\n//       return this._notifyContext;\n//     },\n//\n//     //调用回调方法并传入notification对象\n//     notifyObserver :function(notification) {\n//         // console.log(\"NotifyObserver  --- >notifyObserver\");\n//         this.getNotifyMethod().call(this.getNotifyContext(), notification);\n//     },\n//\n//     //比较\n//     compareNotifyContext : function (obj) {\n//         return obj === this._notifyContext;\n//     },\n//\n// });\n"]}