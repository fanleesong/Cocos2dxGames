{"version":3,"sources":["../../../../../../../assets/scripts/Common/Mgr/LifeSystem/assets/scripts/Common/Mgr/LifeSystem/LifeSystemMgr.js"],"names":["LifeCountDown","require","Max_Life_Num","RequestTaskFactory","Task_Type","LifeSystemMgr","_lifeCountDownInst","_lifeNum","_isStartup","userId","lifeNum","maxCountDownSecs","lazyInit","setCountDownTimeCallback","secs","cc","ss","Facade","sendNotification","TagConst","TAG_LIFE_SYSTEM_COUNT_DOWN_TIME","setCountDownOneRoundCompleteCallback","_onCountDownOneRoundCompleteCallback","bind","_startCountDown","console","log","_pauseCountDown","_resumeCountDown","_reportCountDownTime","TAG_LIFE_SYSTEM_UPDATE_LIFE","_stopCountDown","parseInt","isWorking","task","createTask","Api_Forum","URLConst","getLifeURL","_onResponseCountDownTime","doGet","data","infoCode","obj","JSON","parse","errcode","hp","result","setTimeout","start","TAG_LIFE_SYSTEM_START_COUNT_DOWN","stop","TAG_LIFE_SYSTEM_COMPLETE_COUNT_DOWN","pasue","resume","getCurrentCountDownSecs","module","exports"],"mappings":"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","file":"LifeSystemMgr.js","sourceRoot":"../../../../../../../assets/scripts/Common/Mgr/LifeSystem","sourcesContent":["const LifeCountDown = require('LifeCountDown');\nconst Max_Life_Num = 5;//最大生命\nconst {RequestTaskFactory, Task_Type} = require('RequestTaskFactory');\n\n/**\n * 生命系统管理器\n * 通知\n *      1.倒计时时间\n *      2.开始倒计时\n *      3.结束倒计时\n *      4.增加生命\n *      5.消耗生命\n */\nclass LifeSystemMgr {\n    constructor()\n    {\n        this._lifeCountDownInst = new LifeCountDown();\n        this._lifeNum = 0;\n        this._isStartup = false;\n    }\n\n    /**\n     * 初始化\n     * @param userId\n     * @param lifeNum\n     * @param maxCountDownSecs\n     */\n    lazyInit(userId, lifeNum, maxCountDownSecs)\n    {\n        this._lifeNum = lifeNum;\n\n        this._lifeCountDownInst.lazyInit(maxCountDownSecs);\n        this._lifeCountDownInst.setCountDownTimeCallback((secs) => {\n\n            cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_COUNT_DOWN_TIME, secs);\n        });\n\n        this._lifeCountDownInst.setCountDownOneRoundCompleteCallback(this._onCountDownOneRoundCompleteCallback.bind(this));\n    }\n\n    startUp() {\n        if (!this._isStartup) this._isStartup = true;\n\n        if (this._lifeNum !== Max_Life_Num) this._startCountDown();\n    }\n\n    /**\n     * 进入后台\n     */\n    enterBackground()\n    {\n        console.log(`[LifeSystemMgr]倒计时器接收到到进入后台信息`);\n        this._pauseCountDown();\n    }\n\n    /**\n     * 进入前台\n     */\n    enterForeground()\n    {\n        console.log(`[LifeSystemMgr]倒计时器接收到到进入前台信息`);\n        this._resumeCountDown();\n    }\n\n    getLife() { return this._lifeNum; }\n\n    /**\n     * 倒计时一个循环回调\n     * @private\n     */\n    _onCountDownOneRoundCompleteCallback()\n    {\n        this._pauseCountDown();\n        this._reportCountDownTime();//请求服务器获取最新体力值是否匹配\n    }\n\n    /**\n     *恢复全部体力\n     */\n    recoverAllLife()\n    {\n        this._lifeNum = Max_Life_Num;\n        cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_UPDATE_LIFE, this._lifeNum);\n\n        this._stopCountDown();\n    }\n\n    /**\n     * 更新体力值\n     * @param lifeNum\n     */\n    updateLife(lifeNum){\n        this._lifeNum = parseInt(lifeNum);\n        if (this._lifeNum < Max_Life_Num) this._startCountDown();\n\n        cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_UPDATE_LIFE, this._lifeNum);\n    }\n\n    /**\n     * 是否停止倒计时,如果放回true，则在每个场景中不显示倒计时\n     */\n    isCountingDown() { return this._lifeCountDownInst.isWorking(); }\n\n\n    /**\n     * 上报倒计时完成\n     * @private\n     */\n    _reportCountDownTime()\n    {\n        let task =  RequestTaskFactory.createTask(Task_Type.Api_Forum, cc.ss.URLConst.getLifeURL(), {}, this._onResponseCountDownTime.bind(this));\n        task.doGet();\n    }\n\n    /**\n     * 响应倒计时完成回执\n     * @private\n     */\n    _onResponseCountDownTime(data)\n    {\n        let infoCode = data.infoCode;\n        if (infoCode === 0) {\n            let obj = JSON.parse(data.data);\n            if (obj.errcode === 0) {\n                let hp = parseInt(obj.result.hp);\n                console.log(`[LifeSystemMgr]serverHp:${hp} | localHp : ${this._lifeNum}`);\n\n                setTimeout(()=>{\n                    this._lifeNum = hp;\n                    this._lifeNum = this._lifeNum >= Max_Life_Num ? Max_Life_Num : this._lifeNum;\n                    cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_UPDATE_LIFE);\n\n                    if (this._lifeNum === Max_Life_Num)\n                        this._stopCountDown();\n                    else\n                        this._resumeCountDown();\n                }, 1000);\n\n            }else {\n                setTimeout(() => { this._resumeCountDown(); }, 1000);\n            }\n        }else {\n            setTimeout(() => { this._resumeCountDown(); }, 1000);\n        }\n\n    }\n\n    _startCountDown()\n    {\n        this._lifeCountDownInst.start();\n        cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_START_COUNT_DOWN);\n    }\n\n    _stopCountDown()\n    {\n        this._lifeCountDownInst.stop();\n        cc.ss.Facade.sendNotification(cc.ss.TagConst.TAG_LIFE_SYSTEM_COMPLETE_COUNT_DOWN);\n    }\n\n    _pauseCountDown() { this._lifeCountDownInst.pasue(); }\n\n    _resumeCountDown() { this._lifeCountDownInst.resume(); }\n\n    /**\n     * 获取当前当前倒计时秒数\n     * @returns {*}\n     */\n    getNowCountDownSecs()\n    {\n        return this._lifeCountDownInst.getCurrentCountDownSecs();\n    }\n\n}//end class\n\nmodule.exports = LifeSystemMgr;\n"]}