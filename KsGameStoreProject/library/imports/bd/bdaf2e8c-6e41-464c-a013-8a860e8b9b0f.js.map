{"version":3,"sources":["../../../../../../../assets/scripts/Common/Tool/WebRequest/assets/scripts/Common/Tool/WebRequest/BaseWebRequestTask.js"],"names":["BaseWebRequestTask","url","params","callback","_url","_params","_callback","cc","ss","httpRequestToken","userInfoCache","userId","console","log","isHaveContentType","xhr","loader","getXMLHttpRequest","timeout","sys","isNative","setRequestHeader","_getToken","_getUserId","responseType","infoCode","data","resBody","value","module","exports"],"mappings":";;;;;;;;;;IAAMA;AAEF,gCAAYC,GAAZ,EAAyC;AAAA,YAAxBC,MAAwB,uEAAf,IAAe;AAAA,YAATC,QAAS;;AAAA;;AACrC;AACA;AACA;;AAEA,aAAKC,IAAL,GAAYH,GAAZ;AACA,aAAKI,OAAL,GAAeH,MAAf;AACA,aAAKI,SAAL,GAAiBH,QAAjB;AACH;;;;oCAGD;AACI,mBAAQI,GAAGC,EAAH,CAAMC,gBAAd;AACH;;;qCAGD;AACI,mBAAOF,GAAGC,EAAH,CAAME,aAAN,CAAoBC,MAA3B;AACH;;;gCAEM;AACHC,oBAAQC,GAAR,CAAY,2BAAZ;AACH;;;iCAEO;AACJD,oBAAQC,GAAR,CAAY,4BAAZ;AACH;;;qCAGD;AACID,oBAAQC,GAAR,CAAY,+BAAZ;AACH;;;4CAGD;AAAA,gBADkBC,iBAClB,uEADsC,KACtC;;AACI,gBAAIC,MAAMR,GAAGS,MAAH,CAAUC,iBAAV,EAAV;AACAF,gBAAIG,OAAJ,GAAc,KAAd;;AAEA,gBAAIX,GAAGY,GAAH,CAAOC,QAAX,EAAoB;AAChBL,oBAAIM,gBAAJ,CAAqB,iBAArB,EAAuC,cAAvC,EAAsD,gCAAtD;AACAN,oBAAIM,gBAAJ,CAAqB,OAArB,EAA8B,KAAKC,SAAL,EAA9B;AACAP,oBAAIM,gBAAJ,CAAqB,QAArB,EAA+B,KAAKE,UAAL,EAA/B;AACA,oBAAIT,iBAAJ,EAAsB;AAClBC,wBAAIM,gBAAJ,CAAqB,cAArB,EAAqC,gCAArC;AACH;AACJ;AACD,mBAAON,GAAP;AACH;;;oDAGD;AACI,gBAAIA,MAAMR,GAAGS,MAAH,CAAUC,iBAAV,EAAV;AACAF,gBAAIG,OAAJ,GAAc,KAAd;AACAH,gBAAIS,YAAJ,GAAmB,aAAnB,CAHJ,CAGqC;;AAEjC,mBAAOT,GAAP;AACH;;;0CAGD;AAAA,gBADgBU,QAChB,uEAD2B,CAC3B;AAAA,gBAD8BC,IAC9B,uEADqC,EACrC;;AACI,gBAAIC,UAAU,EAAd;AACAA,oBAAQF,QAAR,GAAmBA,QAAnB,CAFJ,CAEiC;AAC7BE,oBAAQD,IAAR,GAAeA,IAAf;AACA,mBAAOC,OAAP;AACH;;;4BAGS;AACN,mBAAO,KAAKvB,IAAZ;AACH;0BAEOwB,OAAO;AACX,iBAAKxB,IAAL,GAAYwB,KAAZ;AACH;;;4BAEY;AACT,mBAAO,KAAKvB,OAAZ;AACH;0BAEUuB,OAAO;AACd,iBAAKvB,OAAL,GAAeuB,KAAf;AACH;;;4BAEc;AACX,mBAAO,KAAKtB,SAAZ;AACH;0BAEYsB,OAAO;AAChB,iBAAKtB,SAAL,GAAiBsB,KAAjB;AACH;;;;;;AAGLC,OAAOC,OAAP,GAAiB9B,kBAAjB","file":"BaseWebRequestTask.js","sourceRoot":"../../../../../../../assets/scripts/Common/Tool/WebRequest","sourcesContent":["class BaseWebRequestTask {\n\n    constructor(url, params = null, callback){\n        //!!!: 不能使用new.target 否则在cocos creator编译构建的时候会报gulp压缩错误，无法识别new.target语法\n        // if (new.target === BaseWebRequestTask)\n        //     throw new Error('BaseNetRequestTask不能被实例化');\n\n        this._url = url;\n        this._params = params;\n        this._callback = callback;\n    }\n\n    _getToken()\n    {\n        return  cc.ss.httpRequestToken;\n    }\n\n    _getUserId()\n    {\n        return cc.ss.userInfoCache.userId;\n    }\n\n    doGet(){\n        console.log('[BaseNetRequestTask]doGet');\n    }\n\n    doPost(){\n        console.log('[BaseNetRequestTask]doPost');\n    }\n\n    doDownload()\n    {\n        console.log('[BaseNetRequestTask]doRequest');\n    }\n\n    getXMLHttpRequest(isHaveContentType = false)\n    {\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.timeout = 15000;\n\n        if (cc.sys.isNative){\n            xhr.setRequestHeader(\"Accept-Encoding\",\"gzip,deflate\",\"application/json;charset=UTF-8\");\n            xhr.setRequestHeader(\"token\", this._getToken());\n            xhr.setRequestHeader(\"userId\", this._getUserId());\n            if (isHaveContentType){\n                xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\")\n            }\n        }\n        return xhr;\n    }\n\n    getDownloadXMLHttpRequest()\n    {\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.timeout = 15000;\n        xhr.responseType = 'arraybuffer';//接受数据buffer\n\n        return xhr;\n    }\n\n    getRepsonseBody(infoCode = 0, data = \"\")\n    {\n        let resBody = {};\n        resBody.infoCode = infoCode; //超时\n        resBody.data = data;\n        return resBody;\n    }\n\n\n    get url() {\n        return this._url;\n    }\n\n    set url(value) {\n        this._url = value;\n    }\n\n    get params() {\n        return this._params;\n    }\n\n    set params(value) {\n        this._params = value;\n    }\n\n    get callback() {\n        return this._callback;\n    }\n\n    set callback(value) {\n        this._callback = value;\n    }\n}\n\nmodule.exports = BaseWebRequestTask;\n"]}