{"version":3,"sources":["../../../../../../../../../assets/scripts/GameModule/Base/Module/View/Dialog/assets/scripts/GameModule/Base/Module/View/Dialog/MedalDialog.js"],"names":["MedalDialogConst","require","DialogMgr","cc","Class","extends","Component","properties","getMedalSfx","AudioClip","buttonSfx","_listenerId","_closeBtnClickCall","_medalId","initWithData","medalId","isGetMedal","_fitIphoneX","_registerTouchEvent","_bindClickEvent","medalConstData","_getMedalData","_initMedalLogo","_initMedalContentLabel","_initMedalLabel","node","getChildByName","active","_showParticle","ss","localStorage","isSoundOpen","userInfoCache","userId","audioUtil","playSfx","closeBtn","on","ev","_playButtonSfx","destroy","displayBtn","reportPointUtil","reportClickDisplayEvent","showDisplayMedalDialog","find","getComponent","Sprite","spriteFrame","SpriteFrame","url","raw","Get_Image_Path","UnGet_Image_Path","Label","string","Medal_Title","isVanish","Medal_Noti_Get","Medal_Noti_UnGet","key","data","Medal_Id","listener","event","EventListener","TOUCH_ONE_BY_ONE","swallowTouches","onTouchBegan","touches","onTouchMoved","onTouchEnded","eventManager","addListener","onDestroy","removeListener","ParticleSystem","playOnLoad","isIphoneX","uiUtil","isIphoneXsOrAllScreen","newPositionJson","getUserFitIphoneXTopButtonPosition","undefined","posJson","JSON","parse","setPosition","iphoneXPos","setClickCloseDialogCallback","callback"],"mappings":"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","file":"MedalDialog.js","sourceRoot":"../../../../../../../../../assets/scripts/GameModule/Base/Module/View/Dialog","sourcesContent":["const MedalDialogConst = require('MedalDialogConst');\nconst DialogMgr = require('DialogMgr');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        getMedalSfx : cc.AudioClip,\n        buttonSfx : cc.AudioClip,\n        _listenerId: -1,\n        _closeBtnClickCall : null,\n        _medalId : -1\n    },\n\n    initWithData(medalId, isGetMedal = true)\n    {\n        this._medalId = medalId;\n        this._fitIphoneX();\n        this._registerTouchEvent();\n        this._bindClickEvent();\n\n        let medalConstData = this._getMedalData(medalId);\n        if (!medalConstData) return;\n\n        this._initMedalLogo(isGetMedal, medalConstData);\n        this._initMedalContentLabel(isGetMedal, medalConstData);\n        this._initMedalLabel(isGetMedal, medalConstData);\n\n        if (!isGetMedal) this.node.getChildByName('displayBtn').active = false;\n\n        if (isGetMedal) {\n            this._showParticle();\n            if(cc.ss.localStorage.isSoundOpen(cc.ss.userInfoCache.userId)) cc.ss.audioUtil.playSfx(this.getMedalSfx) ;\n        }\n    },\n\n    _bindClickEvent()\n    {\n        let closeBtn = this.node.getChildByName('closeBtn');\n        closeBtn.on('click', (ev) => {\n            this._playButtonSfx();\n            this.node.destroy();\n            if (this._closeBtnClickCall) this._closeBtnClickCall();\n        });\n\n        let displayBtn = this.node.getChildByName('displayBtn');\n        displayBtn.on('click', (ev) => {\n            this._playButtonSfx();\n            this.node.destroy();\n            // 于2018年11月20添加打点\n            cc.ss.reportPointUtil.reportClickDisplayEvent(this._medalId);\n\n           DialogMgr.showDisplayMedalDialog(cc.find('Canvas'), this._medalId);\n        });\n\n    },\n\n    _initMedalLogo(isGetMedal, medalConstData) {\n        cc.find('getMedalNode', this.node).active = isGetMedal;\n        cc.find('unGetMedalNode', this.node).active = !isGetMedal;\n\n        if (isGetMedal) { cc.find('getMedalNode/getMedalLogo', this.node).getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw(medalConstData.Get_Image_Path));\n        }else { cc.find('unGetMedalNode/unGetMedalLogo', this.node).getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw(medalConstData.UnGet_Image_Path)); }\n    },\n    _initMedalLabel(isGetMedal, medalConstData)\n    {\n        cc.find('getMedalTitleSprite', this.node).active = isGetMedal;\n        cc.find('unGetMedalTitleSprite', this.node).active = !isGetMedal;\n\n        if (isGetMedal)\n        {\n            cc.find('getMedalTitleSprite/medalTitleLabel', this.node).getComponent(cc.Label).string = medalConstData.Medal_Title;\n            cc.find('getMedalTitleSprite/juebanSprite', this.node).active = medalConstData.isVanish;\n        }else {\n            cc.find('unGetMedalTitleSprite/medalTitleLabel', this.node).getComponent(cc.Label).string = medalConstData.Medal_Title;\n        }\n\n    },\n\n    _initMedalContentLabel(isGetMedal, medalConstData)\n    {\n        this.node.getChildByName('notiLabel').getComponent(cc.Label).string = isGetMedal ? medalConstData.Medal_Noti_Get : medalConstData.Medal_Noti_UnGet;\n    },\n\n    _getMedalData(medalId)\n    {\n        for(let key in MedalDialogConst)\n        {\n            let data = MedalDialogConst[key];\n            if (data.Medal_Id === medalId ) return  data;\n        }\n        return null;\n    },\n\n    _registerTouchEvent : function () {\n        let listener = {\n            event : cc.EventListener.TOUCH_ONE_BY_ONE,\n            swallowTouches : true,\n            onTouchBegan : function(touches, event) {\n                return true;\n            },\n            onTouchMoved : function(event) {\n\n            },\n            onTouchEnded : function(event) {\n\n            }\n        };\n        this._listenerId = cc.eventManager.addListener(listener, this.node);\n\n    },\n    onDestroy : function () {\n        cc.eventManager.removeListener(this._listenerId);\n    },\n\n    _showParticle()\n    {\n        this.node.getChildByName(\"starParticle\").active = true;\n        this.node.getChildByName(\"starParticle\").getComponent(cc.ParticleSystem).playOnLoad = true;\n    },\n\n    _playButtonSfx()\n    {\n        let isSoundOpen = cc.ss.localStorage.isSoundOpen(cc.ss.userInfoCache.userId);\n        if (isSoundOpen) cc.ss.audioUtil.playSfx(this.buttonSfx);\n    },\n\n    _fitIphoneX : function ()\n    {\n        let isIphoneX = cc.ss.uiUtil.isIphoneXsOrAllScreen();\n        if(isIphoneX === true){\n            let newPositionJson = cc.ss.localStorage.getUserFitIphoneXTopButtonPosition(cc.ss.userInfoCache.userId);\n            if(newPositionJson !== null && newPositionJson !== undefined && newPositionJson !== \"\"){\n                let closeBtn = cc.find('closeBtn',this.node);\n                let posJson = JSON.parse(newPositionJson);\n                closeBtn.setPosition(posJson.iphoneXPos);\n            }\n\n        }\n    },\n\n    setClickCloseDialogCallback(callback) { this._closeBtnClickCall = callback; }\n\n});\n"]}